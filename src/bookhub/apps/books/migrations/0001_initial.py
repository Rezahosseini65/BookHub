# Generated by Django 5.0.4 on 2024-05-29 16:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authors', '0001_initial'),
        ('media', '0001_initial'),
        ('publishers', '0001_initial'),
        ('translators', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, unique=True, verbose_name='slug')),
                ('is_public', models.BooleanField(default=True, verbose_name='is public')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['path'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, max_length=255, unique=True, verbose_name='slug')),
                ('is_public', models.BooleanField(default=True, verbose_name='is public')),
                ('meta_title', models.CharField(blank=True, max_length=512, null=True, verbose_name='meta title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('meta_description', models.CharField(blank=True, max_length=1024, null=True, verbose_name='meta description')),
                ('page_count', models.PositiveIntegerField(default=0, verbose_name='page count')),
                ('publication_year', models.CharField(max_length=4, verbose_name='publication year')),
                ('edition', models.CharField(default='1', max_length=4, verbose_name='edition')),
                ('pdf', models.FileField(blank=True, null=True, upload_to='files/pdf/', verbose_name='PDF')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_discountable', models.BooleanField(default=True, verbose_name='Is Discountable?')),
                ('track_stock', models.BooleanField(default=True, verbose_name='Track Stock')),
                ('require_shipping', models.BooleanField(default=True, verbose_name='Require Shipping?')),
                ('author', models.ManyToManyField(related_name='book_author', to='authors.author', verbose_name='author')),
                ('publisher', models.ManyToManyField(related_name='book_publisher', to='publishers.publisher', verbose_name='publisher')),
                ('translator', models.ManyToManyField(related_name='book_translator', to='translators.translator', verbose_name='translator')),
            ],
            options={
                'verbose_name': 'book',
                'verbose_name_plural': 'books',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='BookImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.PositiveSmallIntegerField(default=0, verbose_name='Display order')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='media.image')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='books.book')),
            ],
            options={
                'verbose_name': 'book image',
                'verbose_name_plural': 'book images',
                'ordering': ('display_order',),
            },
        ),
        migrations.CreateModel(
            name='BookRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveSmallIntegerField(db_index=True, default=0, verbose_name='Rank')),
                ('primary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primary_recommendation', to='books.book', verbose_name='Primary book')),
                ('recommendation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.book', verbose_name='Recommendation book')),
            ],
            options={
                'verbose_name': 'book recommendation',
                'verbose_name_plural': 'book recommendations',
                'ordering': ('primary', '-rank'),
                'unique_together': {('primary', 'recommendation')},
            },
        ),
        migrations.AddField(
            model_name='book',
            name='recommended_book',
            field=models.ManyToManyField(blank=True, through='books.BookRecommendation', to='books.book', verbose_name='Recommended book'),
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='books.category', verbose_name='category'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['name'], name='books_book_name_fbe345_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['id', 'slug'], name='books_book_id_bfc4d5_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['created'], name='books_book_created_e99d4d_idx'),
        ),
    ]
